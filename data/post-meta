// scripts/generate-post-meta.js

const fs = require("fs");
const path = require("path");
const cheerio = require("cheerio");

// Paths
const distDir = path.join(__dirname, "..", "dist");
const outputFile = path.join(__dirname, "..", "data", "post-meta.js");
const ogImageUrl = "https://read.maxclickempire.com/assets/og-image.jpg";

// Utility: Create slug from filename
function slugify(text) {
  return text
    .toLowerCase()
    .replace(/[^a-z0-9 -]/g, "")
    .replace(/\s+/g, "-")
    .replace(/-+/g, "-")
    .replace(/^-+|-+$/g, "");
}

// Extract post metadata
function extractMetadata(html) {
  const $ = cheerio.load(html);
  const title = $("title").text().trim();
  const description = $('meta[name="description"]').attr("content")?.trim() || "";
  const date =
    $('meta[property="article:published_time"]').attr("content") ||
    new Date().toISOString();

  return { title, description, published: date };
}

// Process files
const postMetadata = {};
const htmlFiles = fs.readdirSync(distDir).filter(f => f.endsWith(".html"));

htmlFiles.forEach(filename => {
  const filepath = path.join(distDir, filename);
  const html = fs.readFileSync(filepath, "utf8");
  const meta = extractMetadata(html);
  const slug = path.basename(filename, ".html");

  if (!meta.title || !meta.description) {
    console.warn(`⚠️ Skipped: ${filename} (missing title or description)`);
    return;
  }

  postMetadata[slug] = {
    title: meta.title,
    description: meta.description,
    image: ogImageUrl,
    published: new Date(meta.published).toISOString()
  };
});

const finalOutput = `// Auto-generated by Supreme SEO Engine — Do Not Edit

const postMetadata = ${JSON.stringify(postMetadata, null, 2)};

if (typeof module !== 'undefined' && module.exports) {
  module.exports.postMetadata = postMetadata;
} else if (typeof window !== 'undefined') {
  window.postMetadata = postMetadata;
}
`;

fs.writeFileSync(outputFile, finalOutput, "utf8");
console.log(`✅ post-meta.js generated successfully with ${Object.keys(postMetadata).length} entries.`);